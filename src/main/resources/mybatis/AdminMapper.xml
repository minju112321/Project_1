<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trioshop.repository.mybatis.AdminMapper">

    <insert id="itemSave" useGeneratedKeys="true" keyProperty="itemCode">
        INSERT INTO TRIO_ITEMS (item_name, category_code, item_price, factory_code, item_size, item_color)
        VALUES (#{itemName},#{categoryCode},#{itemPrice},#{factoryCode},#{itemSize},#{itemColor})
    </insert>
    <insert id="stockSave">
        INSERT INTO TRIO_STOCK (item_code, stock_qty)
        VALUES (#{itemCode}, 0)
    </insert>

    <insert id="purchaseSave" useGeneratedKeys="true" keyProperty="purchaseCode">
        INSERT INTO TRIO_PURCHASE (purchase_qty, item_code, purchase_price)
        VALUES (#{purchaseQty}, #{itemCode}, #{purchasePrice})
    </insert>

    <select id="purchaseFindAll" resultType="PurchaseListModel">
        SELECT purchase_code, pur.item_code, purchase_qty, factory_code, item_name, purchase_price,
        category_name, item_size, item_color, item.category_code
        FROM TRIO_PURCHASE pur
        JOIN TRIO_ITEMS item ON pur.item_code = item.item_code
        JOIN TRIO_CATEGORY cate ON item.category_code = cate.category_code
        <where>
                AND status_code = '10'
            <if test="itemName != null and itemName != ''">
                AND item_name LIKE concat('%', #{itemName}, '%')
            </if>
            <if test="category != null and category != ''">
                AND item.category_code = #{category}
            </if>
        </where>
        ORDER BY 1;
    </select>

    <select id="purchaseFindByCode" resultType="PurchaseListModel">
        SELECT purchase_code, pur.item_code, purchase_qty, factory_code, item_name, purchase_price,
               category_name, item_size, item_color
        FROM TRIO_PURCHASE pur, TRIO_ITEMS item, TRIO_CATEGORY cate
        WHERE pur.item_code = item.item_code
          AND item.category_code = cate.category_code
        AND purchase_code = #{purchaseCode}
        ORDER BY 1;
    </select>

    <update id="deletePurchaseByCode">
        UPDATE TRIO_PURCHASE
        SET status_code = '30'
        WHERE purchase_code = #{purchaseCode}
    </update>

    <insert id="storeSave" useGeneratedKeys="true" keyProperty="storeCode">
        INSERT INTO TRIO_STORES (stores_qty, item_code, stores_price
        <if test="purchaseCode != null">
            , purchase_code
        </if>
        )
        VALUES (#{storeQty}, #{itemCode}, #{storePrice}
        <if test="purchaseCode != null">
            , #{purchaseCode}
        </if>
        )
    </insert>


    <select id="storesFindAll" resultType="StoresListModel">
        SELECT st.store_code, st.stores_qty, st.purchase_code,
        st.item_code, item.factory_code, item.item_name,
        cate.category_name, st.stores_price, item.item_size, item.item_color
        FROM TRIO_STORES st
        JOIN TRIO_ITEMS item ON st.item_code = item.item_code
        JOIN TRIO_CATEGORY cate ON item.category_code = cate.category_code
        LEFT JOIN TRIO_PURCHASE pur ON st.purchase_code = pur.purchase_code
        <where>
            <if test="itemName != null and itemName != ''">
                and item_name LIKE concat('%' , #{itemName} , '%')
            </if>
            <if test="category != null and category != ''">
                and item.category_code = #{category}
            </if>
        </where>
        ORDER BY st.store_code
    </select>

    <select id="storesFindByCode" resultType="StoresListModel">
        SELECT st.store_code, st.stores_qty, st.item_code,
               item.factory_code, item.item_name, cate.category_name,
               st.stores_price, item.item_size, item.item_color,
               st.purchase_code
        FROM TRIO_STORES st
                 JOIN TRIO_ITEMS item ON st.item_code = item.item_code
                 JOIN TRIO_CATEGORY cate ON item.category_code = cate.category_code
                 LEFT JOIN TRIO_PURCHASE pur ON st.purchase_code = pur.purchase_code
        WHERE st.store_code = #{storeCode}
        ORDER BY st.store_code
    </select>



    <delete id="deleteStoresByCode">
        DELETE FROM TRIO_STORES
        WHERE store_code = #{storeCode}
    </delete>

    <select id="itemFindByCode" resultType="ItemQtyModel">
        SELECT item_code, stock_qty
        FROM TRIO_STOCK
        WHERE item_code = item_code
        AND item_code = #{itemCode}
    </select>

    <update id="addItemQty">
        UPDATE TRIO_STOCK
        SET stock_qty = #{qty}
        WHERE item_code = #{itemCode}
        </update>

    <select id="stockFindAll" resultType="StockModel">
            SELECT st.item_code, item_name, category_name, item_price,
            stock_qty, factory_code, item_size, item_color
            FROM TRIO_ITEMS item
            JOIN TRIO_STOCK st ON st.item_code = item.item_code
            JOIN TRIO_CATEGORY cate ON item.category_code = cate.category_code
            <where>
                <if test="itemName != null and itemName != ''">
                    AND item_name LIKE concat('%', #{itemName}, '%')
                </if>
                <if test="category != null and category != ''">
                    AND item.category_code = #{category}
                </if>
            </where>
            ORDER BY st.item_code;
    </select>

    <select id="stockFindByCode" resultType="StockModel">
        SELECT st.item_code, item_name, category_name, item_price,
               stock_qty, factory_code, item_size, item_color
        FROM TRIO_STOCK st, TRIO_ITEMS item, TRIO_CATEGORY cate
        WHERE st.item_code = item.item_code
          AND item.category_code = cate.category_code
        AND st.item_code = #{itemCode}
        ORDER BY 1;
    </select>

    <update id="updateItem">
        UPDATE TRIO_ITEMS
        SET factory_code = #{factoryCode},
            item_name = #{itemName},
            item_color = #{itemColor}
        WHERE item_code = #{itemCode}
    </update>

</mapper>