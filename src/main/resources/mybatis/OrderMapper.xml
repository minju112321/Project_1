<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trioshop.repository.mybatis.OrderMapper">
    <select id="yearSales" resultType="SalesModel">
        SELECT
        YEAR(o.order_date) AS order_year,
        SUM(oi.order_qty * i.item_price) AS total_sales
        FROM TRIO_ORDER_ITEMS oi
        JOIN TRIO_ORDERS o ON oi.order_code = o.order_code
        JOIN TRIO_ITEMS i ON oi.item_code = i.item_code
        WHERE o.status_code = '30'
        <if test="year != null">
            AND YEAR(o.order_date) = #{year}
        </if>
        GROUP BY YEAR(o.order_date)
        ORDER BY order_year;
    </select>


    <select id="monthSales" resultType="SalesModel">
        SELECT
        DATE_FORMAT(o.order_date, '%m') AS order_month,
        SUM(i.item_price * oi.order_qty) AS total_sales
        FROM TRIO_ORDER_ITEMS oi
        JOIN TRIO_ORDERS o ON oi.order_code = o.order_code
        JOIN TRIO_ITEMS i ON oi.item_code = i.item_code
        WHERE YEAR(o.order_date) = #{year}
        AND o.status_code = '30'
        <if test="month != null">
            AND DATE_FORMAT(o.order_date, '%m') = #{month}
        </if>
        GROUP BY DATE_FORMAT(o.order_date, '%Y-%m')
        ORDER BY DATE_FORMAT(o.order_date, '%Y-%m')
    </select>

    <select id="allOrderPrice" resultType="Long">
        SELECT SUM(item.item_price * oi.order_qty) AS total_order_amount
        FROM TRIO_ORDER_ITEMS oi
                 JOIN TRIO_ITEMS item ON oi.item_code = item.item_code
                 JOIN TRIO_ORDERS o ON o.order_code = oi.order_code
        WHERE o.status_code = '30'
    </select>

    <select id="allPurchaseQty" resultType="Integer">
        SELECT SUM(purchase_qty)
        FROM TRIO_PURCHASE
        WHERE status_code = '10'
    </select>

<!--    <select id="orderList" resultType="OrderListModel">-->
<!--        SELECT o.order_code,-->
<!--               o.user_code,-->
<!--               o.order_date,-->
<!--               os.status_name,-->
<!--               i.item_name,-->
<!--               oi.order_qty,-->
<!--               i.item_price,-->
<!--               o.status_code-->
<!--        FROM TRIO_ORDERS o-->
<!--                 JOIN TRIO_ORDER_STATUS os ON o.status_code = os.status_code-->
<!--                 JOIN TRIO_ORDER_ITEMS oi ON o.order_code = oi.order_code-->
<!--                 JOIN TRIO_ITEMS i ON oi.item_code = i.item_code-->
<!--        ORDER BY o.order_date desc;-->
<!--    </select>-->

    <select id="orderList" resultType="OrderListModel">
        SELECT o.order_code,
            o.user_code,
            o.order_date,
            os.status_name,
            GROUP_CONCAT(i.item_name SEPARATOR ', ') AS item_names,
            GROUP_CONCAT(oi.order_qty SEPARATOR ', ') AS order_qtys,
            GROUP_CONCAT(i.item_price SEPARATOR ', ') AS item_prices,
            o.status_code,
            o.delivery_code,
            o.waybill_num
        FROM TRIO_ORDERS o
                JOIN TRIO_ORDER_STATUS os ON o.status_code = os.status_code
                JOIN TRIO_ORDER_ITEMS oi ON o.order_code = oi.order_code
                JOIN TRIO_ITEMS i ON oi.item_code = i.item_code
        <where>
            <if test="userCode != null and userCode != ''">
                AND o.user_code = #{userCode}
            </if>
            <if test="statusCode != null and statusCode != ''">
                AND o.status_code = #{statusCode}
            </if>
        </where>
        GROUP BY o.order_code, o.user_code, o.order_date, os.status_name
        ORDER BY o.order_date DESC, o.user_code ASC
    </select>
    <select id="statusList" resultType="OrderStatusEntity">
        SELECT status_code, status_name
        FROM TRIO_ORDER_STATUS
        ORDER BY status_code;
    </select>

    <update id="updateStatus">
        UPDATE TRIO_ORDERS
        SET status_code = #{statusCode}
        WHERE order_code = #{orderCode}
    </update>

    <select id="deliveryEntityList" resultType="deliveryEntity">
        SELECT delivery_code, delivery_name
        FROM TRIO_DELIVERY
    </select>

    <update id="addWaybill">
        UPDATE TRIO_ORDERS
        SET delivery_code = #{deliveryCode},
            waybill_num = #{waybillNum}
        WHERE order_code = #{orderCode}
    </update>

    <select id="findWaybillByCode" resultType="WaybillSelectModel">
        SELECT delivery_name, waybill_num
        FROM TRIO_ORDERS o
        JOIN TRIO_DELIVERY d ON o.delivery_code = d.delivery_code
        WHERE o.order_code = #{orderCode}
    </select>
</mapper>